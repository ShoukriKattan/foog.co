/**
 * Required Modules
 */

var SummaryModule = require("cloud/summary.js");
var TestDataModule = require('cloud/testdata.js');
var Triggers = require('cloud/triggers.js');
var SMS = require('cloud/sms.js');
var JOBS = require('cloud/jobs.js');

/**
 * Triggers Section
 */
Parse.Cloud.beforeSave(Parse.User, Triggers.beforeSaveUser);
Parse.Cloud.beforeSave("CoachUserLink", Triggers.beforeSaveCoachUserLink);
Parse.Cloud.afterSave("CoachUserLink", Triggers.afterSaveCoachUserLink);
Parse.Cloud.afterSave("SummaryCard", Triggers.afterSaveSummaryCard);
Parse.Cloud.afterSave("Meal", Triggers.afterSaveMeal);

/**
 * Jobs Section 
 */
// Weekly Summary Cron Job
Parse.Cloud.job("weeklySummary", JOBS.summaryJob);

/**
 Cloud Functions
 */
//Confirm phone Number by sending SMS
Parse.Cloud.define("confirmPhoneNumber", SMS.confirmPhoneNumber);

// Validate Verification Code that was received in SMS
Parse.Cloud.define("validateVerificationCode", SMS.validateVerificationCode);

//Test Data : {"coachId":"tshO1U2vua","userId":"vXui2W8A7D","beginDate":"2015-05-31T00:00:00.000Z","endDate":"2015-06-07T00:00:00.000Z","profileBeginDate":"2015-05-31T00:00:00.000Z","beginWeekDay":"0"}
//Begin load meals cloud function
// Need to test scenario where week 0
// Need to test scenario where in Week 0 there are 0 meals.
//TODO: Need a trigger ... On Save of new user .. create Summary Card 1
Parse.Cloud.define("runUserSummary", function(request, response) {

	var coachId = request.params.coachId;
	var userId = request.params.userId;

	var beginDate = request.params.beginDate;
	var endDate = request.params.endDate;
	var profileBeginDate = request.params.profileBeginDate;
	var beginWeekDay = request.params.beginWeekDay;

	var userPointer = {
		__type : 'Pointer',
		className : '_User',
		objectId : userId
	};

	var coachPointer = {
		__type : 'Pointer',
		className : '_User',
		objectId : coachId
	};

	var ret = SummaryModule.saveUserMealSummary(coachPointer, userPointer, beginDate, endDate, profileBeginDate, beginWeekDay);

	ret.then(function() {
		response.success("Summary Run Successful");
	}, function(error) {
		response.error("Error running summary " + JSON.stringify(error));
	});

});
// end of cloud function Load Melas

Parse.Cloud.define("runUsersSummary", function(request, response) {

	SummaryModule.processUsersSummary().then(function() {
		response.success("Summary Run Successfully");
	}, function(error) {
		response.error("Error Running Summary " + JSON.stringify(error));
	});

});
// end of cloud function runSummary




/**
 *
 */
Parse.Cloud.define("testRunner", function(request, response) {

	var userId = request.params.userId;

	var coachId = request.params.coachId;

	var action = request.params.action;

	switch(action) {
	case "createAll":
		TestDataModule.createAll().then(function(ok) {
			response.success("OK");
		}, function(error) {
			response.error(JSON.stringify(error));
		});
		break;
	case "createMeals":

		var user = {
			__type : 'Pointer',
			className : '_User',
			objectId : userId
		};

		var coach = {
			__type : 'Pointer',
			className : '_User',
			objectId : coachId
		};

		var weekStart = new Date(request.params.weekStartDate);

		TestDataModule.createDataForMeal(weekStart, user, coach).then(function(ok) {
			response.success("OK");
		}, function(error) {
			response.error(JSON.stringify(error));
		});
		break;
	}

});

//TODO: Data cleanup tasks to be done ..
//Truncate or archive meals , meal images, that are older than x days ...
// Truncate users or archive usrs, older than x days

